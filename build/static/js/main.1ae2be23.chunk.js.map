{"version":3,"sources":["Components/Navbar/Navbar.js","customHooks/useFetch.js","Components/Loading.js","Components/Peliculas/Pelicula.js","Components/Peliculas/Peliculas.js","App.js","reportWebVitals.js","index.js"],"names":["navBar","Row","className","Navbar","bg","variant","fixed","Brand","href","Nav","Link","Form","inline","FormControl","type","placeholder","Button","BASE_URL","Loading","color","css","display","margin","size","Pelicula","original_title","overview","release_date","poster_path","Col","md","Card","Img","src","alt","Body","Title","Text","block","Peliculas","endpoint","initialState","useState","data","setData","fetching","setFetching","error","setError","fetchData","a","fetch","method","result","json","console","log","useEffect","useFetch","peliculas","results","length","map","pelicula","id","App","Container","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.1ae2be23.chunk.js","sourcesContent":["import { Row, Navbar, Nav, Form, FormControl, Button } from \"react-bootstrap\";\r\nconst navBar = () => {\r\n  return (\r\n    <Row className=\"mb-5\">\r\n      <Navbar bg=\"dark\" variant=\"dark\" fixed=\"top\">\r\n        <Navbar.Brand href=\"#home\">Peliculas</Navbar.Brand>\r\n        <Nav className=\"mr-auto\">\r\n          <Nav.Link href=\"#personajes\">Personajes</Nav.Link>\r\n          <Nav.Link href=\"#episodios\">Episodios</Nav.Link>\r\n          <Nav.Link href=\"#lugares\">Lugares</Nav.Link>\r\n        </Nav>\r\n        <Form inline>\r\n          <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\r\n          <Button variant=\"outline-info\">Search</Button>\r\n        </Form>\r\n      </Navbar>\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default navBar;\r\n","// custom hook es una funcion personalizada que involucra uno o m치s hooks\r\n// custom hooks  -> funcional\r\n\r\n// SSR -> NEXT / NUST\r\n\r\nimport { useEffect, useState } from \"react\";\r\nconst BASE_URL =\r\n  \"https://api.themoviedb.org/3/movie/550?api_key=bc7e75b69fc88b8184c3bf605f28ebea\";\r\nexport const useFetch = (endpoint, initialState = []) => {\r\n  const [data, setData] = useState(initialState);\r\n  const [fetching, setFetching] = useState(true);\r\n  const [error, setError] = useState(false);\r\n\r\n  const fetchData = async () => {\r\n    try {\r\n      const result = await fetch(`${BASE_URL}`, {\r\n        method: \"GET\",\r\n        //mode: \"no-cors\",\r\n      });\r\n      const data = await result.json();\r\n      console.log(\"Algo traje\");\r\n      console.log(data);\r\n      setData(data);\r\n      setFetching(false);\r\n    } catch (e) {\r\n      console.log(\"ERROR\");\r\n      setData(initialState);\r\n      setFetching(false);\r\n      setError(true);\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [endpoint]);\r\n\r\n  return [data, fetching, error];\r\n};\r\n","import ClipLoader from \"react-spinners/ClipLoader\";\r\n\r\nconst Loading = () => {\r\n  return (\r\n    <ClipLoader\r\n      color={\"black\"}\r\n      css={{ display: \"block\", margin: \"0 auto\" }}\r\n      size={150}\r\n    />\r\n  );\r\n};\r\n\r\nexport default Loading;\r\n","import { Col, Card, Button } from \"react-bootstrap\";\r\n\r\nconst Pelicula = ({ original_title, overview, release_date, poster_path }) => {\r\n  return (\r\n    <Col md={4} className=\"mt-3 mb-3\">\r\n      <Card>\r\n        <Card.Img variant={\"top\"} src={poster_path} alt=\"\" />\r\n        <Card.Body>\r\n          <Card.Title>\r\n            {original_title} - {release_date}\r\n          </Card.Title>\r\n          <Card.Text>\r\n            <p>{overview}</p>\r\n          </Card.Text>\r\n          <Button type=\"button\" variant=\"primary\" block>\r\n            Ver m치s\r\n          </Button>\r\n        </Card.Body>\r\n      </Card>\r\n    </Col>\r\n  );\r\n};\r\n\r\nexport default Pelicula;\r\n","// componente l칩gica ( peticion http + map )\r\nimport { useFetch } from \"../../customHooks/useFetch\";\r\nimport { Row } from \"react-bootstrap\";\r\n/* Spinner */\r\nimport Loading from \"../Loading\";\r\n/* Componente de presentacion */\r\nimport Pelicula from \"./Pelicula\";\r\n\r\n/* Custom hook */\r\nconst Peliculas = () => {\r\n  const [data, fetching] = useFetch(\"popular\");\r\n  const { results: peliculas } = data;\r\n\r\n  return (\r\n    <Row className=\"mt-5\">\r\n      {fetching ? ( // Si fetching es True\r\n        <Loading /> // Cargando\r\n      ) : peliculas.length ? (\r\n        // cuando carg칩 armo el map\r\n        peliculas.map((pelicula) => (\r\n          <Pelicula key={pelicula.id} {...pelicula} />\r\n        ))\r\n      ) : null}\r\n    </Row>\r\n  );\r\n};\r\n\r\nexport default Peliculas;\r\n","import { Container } from \"react-bootstrap\";\r\nimport Navbar from \"./Components/Navbar\";\r\nimport Peliculas from \"./Components/Peliculas\";\r\n\r\n// useRef\r\nfunction App() {\r\n  return (\r\n    <Container>\r\n      <Navbar />\r\n      <Peliculas />\r\n    </Container>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}